{"version":3,"sources":["webpack:///src/App.vue","webpack:///<no source>","webpack:///src/views/Home.vue","webpack:///src/views/src/views/Home.vue"],"names":[],"mappings":"AAOA,UCPA,wBDQE,CEwZF,oDDhaA,wBCiaE,CACA,0HDlaF,UCmaI,CCIJ,2BACA,GAAA,2BAAA,CAAA,mBAAA,CACA,GAAA,+BAAA,CAAA,uBAAA,CACA,CAHA,mBACA,GAAA,2BAAA,CAAA,mBAAA,CACA,GAAA,+BAAA,CAAA,uBAAA,CACA,CACA,aAAA,uCAAA,CAAA,+BAAA,CACA,aACA,iBAAA,CACA,WAAA,CACA,YAAA,CACA,QAAA,CACA,SAAA,CACA,iBAAA,CACA,qBAAA,CACA,oDAAA,CACA,6DAAA,CAAA,qDACA,CAEA,oDACA,WAAA,CACA,YAAA,CACA,QAAA,CACA,SAAA,CACA,6DACA,CACA,0BACA,oDACA,CACA,0BAAA,wBAAA,CACA,8BACA,iBAAA,CACA,UAAA,CACA,WAAA,CACA,+BAAA,CAAA,uBACA,CACA,yEACA,UAAA,CACA,aAAA,CACA,iBAAA,CACA,SAAA,CACA,UAAA,CACA,QAAA,CACA,SAAA,CACA,kBAAA,CACA,iBAAA,CACA,sCAAA,CAAA,8BACA,CACA,oCACA,SAAA,CACA,QAAA,CACA,sCAAA,CAAA,8BACA,CAEA,0BAAA,wBAAA,CACA,8BACA,iBAAA,CACA,UAAA,CACA,WAAA,CACA,+BAAA,CAAA,uBACA,CACA,yEACA,UAAA,CACA,aAAA,CACA,iBAAA,CACA,SAAA,CACA,UAAA,CACA,QAAA,CACA,SAAA,CACA,kBAAA,CACA,iBAAA,CACA,sCAAA,CAAA,8BACA,CACA,oCACA,SAAA,CACA,QAAA,CACA,sCAAA,CAAA,8BACA,CACA,6BACA,WAAA,CACA,YAAA,CACA,oBAAA,CACA,eAAA,CACA,sBAAA,CACA,QACA,CACA,SACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,wCAAA,CAAA,gCAAA,CACA,kCAAA,CAAA,0BAAA,CACA,4BAAA,CAAA,oBACA,CACA,aAAA,8BAAA,CAAA,sBAAA","file":"index.146269d1.css","sourcesContent":["\n\n\n\n\n\n\nhtml, body\n  @apply bg-blue-darkest\n",null,"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.vs__dropdown-option.vs__dropdown-option--highlight\n  @apply bg-blue\n  .name, .nativeName\n    @apply text-white\n","<template>\n  <div class=\"home\">\n    <div class=\"container\">\n      <div class=\"clearfix\">\n        <div class=\"w-full md:w-1/5 float-right m-8 flex items-center\">\n          <span class=\"text-blue uppercase text-xs\">language: </span>\n          <v-select v-model=\"selectedLang\" :options=\"langs.list\" :clearable=\"false\" label=\"Language\" class=\"bg-blue-darkest w-full\">\n            <template #selected-option=\"{ name }\">\n              <div class=\"text-blue-light text-sm\">{{ name }}</div>\n            </template>\n            <template v-slot:option=\"option\">\n              <div class=\"text-sm\">{{ option.name }}</div>\n            </template>\n          </v-select>\n        </div>\n      </div>\n      <div class=\"text-center py-32 text-white\">\n        <div v-if=\"selectedCountry\" class=\"text-4xl font-bold flex flex-wrap items-end justify-center\">\n          <div class=\"flex flex-col items-center mr-8\">\n            <!-- <div v-show=\"selectedCountry.flag\" class=\"text-xs text-grey-dark ml-4 flex items-center bg-white py-4 px-8 rounded-sm\">\n              <img :src=\"selectedCountry.flag\" :alt=\"`flag-${selectedCountry.name}`\" class=\"w-4 mr-4 block\">\n              <div>{{ selectedCountry.name }}</div>\n            </div> -->\n            <div class=\"mt-8 text-blue-light\">{{ selectedCountry.nativeName }}</div>\n          </div>\n          <div>{{ $t('covid-19') }} {{ $t('dailyTracking') }}</div>\n        </div>\n        <div class=\"text-xs text-grey-dark mt-8\"><a class=\"text-orange flex items-center justify-center\" href=\"https://github.com/PhantasWeng/coronavirus-daily-dashboard\"><img :src=\"githubIcon\" class=\"w-4 mr-8\" /><span>Phantas Weng</span></a></div>\n      </div>\n      <div class=\"w-full md:w-1/3 mb-32 mx-auto\">\n        <v-select v-model=\"selectedCountry\" :options=\"countries\" :clearable=\"false\" label=\"name\" :filterBy=\"filterBy\" class=\"bg-white\">\n          <template #selected-option=\"{ name, nativeName, flag }\">\n            <div class=\"flex-1 flex items-center\">\n              <div v-show=\"flag\" class=\"w-4 mr-4\">\n                <img :src=\"flag\" :alt=\"`flag-${name}`\" class=\"w-full\">\n              </div>\n              <!-- <div class=\"font-bold mr-16\">{{ name }}</div> -->\n              <div class=\"text-sm text-grey-darker mr-8\">{{ nativeName }}</div>\n              <div class=\"text-xs text-grey-darker\"> - {{ name }}</div>\n            </div>\n          </template>\n          <template v-slot:option=\"option\">\n            <div class=\"flex\">\n              <div class=\"flex-1 flex\">\n                <div class=\"nativeName font-bold mr-8\">{{ option.nativeName }}</div>\n                <div class=\"name text-sm text-grey-darker\">- {{ option.name }}</div>\n              </div>\n              <!-- <div class=\"flex-1 text-grey-dark\">{{ option.alpha3Code }}</div> -->\n            </div>\n          </template>\n        </v-select>\n      </div>\n      <div v-if=\"isLoading\" style=\"text-align: center; margin: 80px;\">\n        <div class=\"loading-spinner-double-ring\">\n          <div class=\"spinner\">\n            <div></div>\n            <div></div>\n            <div><div></div></div>\n            <div><div></div></div>\n          </div>\n        </div>\n        <div style=\"color: #fff;\">{{ $t('loading') }}</div>\n      </div>\n      <div v-if=\"errMsg\" class=\"text-white text-center my-88\">\n        <template v-if=\"errMsg === 404\">\n          <div class=\"text-2xl\">{{ $t('noData') }}</div>\n        </template>\n      </div>\n      <div v-if=\"sortedDate.length > 0 && isResult\" class=\"border-t border-blue mb-0 flex flex-col items-center py-32 px-8\">\n        <div class=\"text-sm text-blue mb-24 \"><i class=\"owl-circle-clock-o\"></i>{{ $t('latestUpdate') }}: {{ sortedDate[0].date }}</div>\n        <div class=\"flex flex-col md:flex-row items-center justify-center\">\n          <div class=\"flex-grow flex-shrink border border-blue rounded-sm flex flex-col items-center py-16 px-16 mb-32 md:mb-0 md:mx-8\">\n            <div class=\"text-white text-lg mb-8 text-center\">\n              <div class=\"mb-4\">{{ $t('latest') }} {{ $t('increase') }}</div>\n            </div>\n            <div class=\"flex text-center\">\n              <div class=\"mr-8\">\n                <div class=\"mb-4 text-lg text-blue mb-8\">{{ $t('confirmed') }}</div>\n                <div class=\"p-8 text-white bg-blue rounded-sm text-4xl text-center h-16 flex items-center justify-center\">\n                  <template v-if=\"additionCount(0, 'confirmed') > -1\">{{ additionCount(0, 'confirmed') }}</template>\n                  <template v-else><i class=\"text-sm owl-load\"></i></template>\n                </div>\n              </div>\n              <div class=\"mr-8\">\n                <div class=\"mb-4 text-lg text-blue mb-8\">{{ $t('death') }}</div>\n                <div class=\"p-8 text-white bg-orange rounded-sm text-4xl text-center h-16 flex items-center justify-center\">\n                  <template v-if=\"additionCount(0, 'deaths') > -1\">{{ additionCount(0, 'deaths') }}</template>\n                  <template v-else><i class=\"text-sm owl-load\"></i></template>\n                </div>\n              </div>\n              <div>\n                <div class=\"mb-4 text-lg text-blue mb-8\">{{ $t('recovered') }}</div>\n                <div class=\"p-8 text-white bg-green-dark rounded-sm text-4xl text-center h-16 flex items-center justify-center\">\n                  <template v-if=\"additionCount(0, 'recovered') > -1\">{{ additionCount(0, 'recovered') }}</template>\n                  <template v-else><i class=\"text-sm owl-load\"></i></template>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"flex-grow flex-shrink border border-blue-darker rounded-sm flex flex-col items-center py-16 px-16 md:mx-8\">\n            <div class=\"text-white text-lg mb-8 text-center\">\n              <div class=\"mb-4\">{{ $t('cumulative') }}</div>\n            </div>\n            <div class=\"flex text-center\">\n              <div class=\"mr-8\">\n                <div class=\"mb-4 text-lg text-blue mb-8\">{{ $t('confirmed') }}</div>\n                <div class=\"p-8 text-white bg-blue rounded-sm text-4xl text-center h-16 flex items-center justify-center\">\n                  <template v-if=\"sortedDate[0].data.confirmed > 0\">{{ sortedDate[0].data.confirmed }}</template>\n                  <template v-else><i class=\"text-sm owl-load\"></i></template>\n                </div>\n              </div>\n              <div class=\"mr-8\">\n                <div class=\"mb-4 text-lg text-blue mb-8\">{{ $t('death') }}</div>\n                <div class=\"p-8 text-white bg-orange rounded-sm text-4xl text-center h-16 flex items-center justify-center\">\n                  <template v-if=\"sortedDate[0].data.deaths > 0\">{{ sortedDate[0].data.deaths }}</template>\n                  <template v-else><i class=\"text-sm owl-load\"></i></template>\n                </div>\n              </div>\n              <div>\n                <div class=\"mb-4 text-lg text-blue mb-8\">{{ $t('recovered') }}</div>\n                <div class=\"p-8 text-white bg-green-dark rounded-sm text-4xl text-center h-16 flex items-center justify-center\">\n                  <template v-if=\"sortedDate[0].data.recovered > 0\">{{ sortedDate[0].data.recovered }}</template>\n                  <template v-else><i class=\"text-sm owl-load\"></i></template>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <LineChart class=\"mt-24 flex-auto\" :class=\"{'invisible': !isResult}\" :chart-data=\"dataCollection\" :options=\"chartOptions\"></LineChart>\n      <div v-if=\"isResult\" class=\"border-t border-blue pt-88 mt-88\">\n        <div class=\"text-center\">\n          <div class=\"text-2xl text-blue font-bold mb-16\">{{ $t('historyRecord') }}</div>\n          <template v-for=\"(item, index) in sortedDate\">\n            <div class=\"mb-8\" :key=\"index\">\n              <div class=\"text-sm text-blue-light ml-4 mb-4\"><i class=\"owl-circle-clock-o\"></i>{{ item.date }}</div>\n              <div class=\"border border-1 border-blue rounded-sm p-16 mb-16 inline-block\">\n                <div class=\"flex text-center\">\n                  <div class=\"flex flex-col items-center mr-32 text-blue-light\">\n                    <div class=\"font-bold capitalize flex flex-col items-center mb-8\">\n                      <div class=\"mb-8\">{{ $t('cumulative') }} {{ $t('confirmed') }}</div>\n                      <div class=\"font-bold text-xs text-blue-dark\">confirmed</div>\n                    </div>\n                    <div class=\"h-8 flex items-center\">\n                      <span class=\"text-2xl\">{{ item.data.confirmed }}</span>\n                      <span v-if=\"additionCount(index, 'confirmed') > 0\" class=\"self-end leading-md text-xs font-bold text-red ml-8\">(+{{ additionCount(index, 'confirmed')}})</span>\n                    </div>\n                  </div>\n                  <div class=\"flex flex-col items-center mr-32 text-orange\">\n                    <div class=\"font-bold capitalize flex flex-col items-center mb-8\">\n                      <div class=\"mb-8\">{{ $t('cumulative') }} {{ $t('death') }}</div>\n                      <div class=\"font-bold text-xs text-blue-dark\">deaths</div>\n                    </div>\n                    <div class=\"h-8 flex items-center\">\n                      <span class=\"text-2xl\">{{ item.data.deaths }}</span>\n                      <span v-if=\"additionCount(index, 'deaths') > 0\" class=\"self-end leading-md text-xs font-bold text-red ml-8\">(+{{ additionCount(index, 'deaths')}})</span>\n                    </div>\n                  </div>\n                  <div class=\"flex flex-col items-center text-green\">\n                    <div class=\"font-bold capitalize flex flex-col items-center mb-8\">\n                      <div class=\"mb-8\">{{ $t('cumulative') }} {{ $t('recovered') }}</div>\n                      <div class=\"font-bold text-xs text-blue-dark\">recovered</div>\n                    </div>\n                    <div class=\"h-8 flex items-center\">\n                      <span class=\"text-2xl\">{{ item.data.recovered }}</span>\n                      <span v-if=\"additionCount(index, 'recovered') > 0\" class=\"self-end leading-md text-xs font-bold text-red ml-8\">(+{{ additionCount(index, 'recovered')}})</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </template>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\nimport dayjs from 'dayjs'\nimport { mapActions, mapGetters, mapMutations } from 'vuex'\nimport LineChart from '@/views/chartTemplate/lineChart'\nimport githubIcon from '@/assets/GitHub-Mark-Light-32px.png'\nexport default {\n  name: 'Home',\n  components: {\n    LineChart\n  },\n  data () {\n    return {\n      githubIcon: githubIcon,\n      selectedCountry: {},\n      errMsg: null,\n      isLoading: true,\n      data: [],\n      dataCollection: null,\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n          }\n        },\n        legend: {\n          // display: false\n          labels: {\n            usePointStyle: true,\n            boxWidth: 4,\n            fontColor: '#3ab3e2'\n          }\n        },\n        title: {\n          display: false\n        },\n        hover: {\n          intersect: false\n        },\n        tooltips: {\n          mode: 'point'\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: false\n              },\n              display: false\n            }\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                color: '#07689f',\n                drawBorder: false\n              },\n              ticks: {\n                fontColor: '#3ab3e2'\n              }\n            }\n          ]\n        }\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      countries: 'countries',\n      langs: 'langs'\n    }),\n    selectedLang: {\n      get: function () {\n        return this.langs.selectedLang\n      },\n      set: function (option) {\n        this.SET_LANGUAGE(option)\n      }\n    },\n    isResult: function () {\n      return !this.isLoading && !this.errMsg\n    },\n    dates: function () {\n      const result = []\n      _.each(this.data.result, (date, key) => {\n        result.push(dayjs(key).format('YYYY-MM-DD'))\n      })\n      return result\n    },\n    confirmed: function () {\n      const result = []\n      _.each(this.data.result, date => {\n        result.push(date.confirmed)\n      })\n      return result\n    },\n    deaths: function () {\n      const result = []\n      _.each(this.data.result, date => {\n        result.push(date.deaths)\n      })\n      return result\n    },\n    recovered: function () {\n      const result = []\n      _.each(this.data.result, date => {\n        result.push(date.recovered)\n      })\n      return result\n    },\n    sortedDate: function () {\n      const reMap = _.map(this.data.result, (data, date) => {\n        return {\n          date,\n          data\n        }\n      })\n      return _.orderBy(reMap, 'date', 'desc')\n    },\n    totalConfirmed: function () {\n      return this.sortedDate.length > 0 && this.sortedDate[0].data ? this.sortedDate[0].data.confirmed : null\n    },\n    totalDeaths: function () {\n      return this.sortedDate.length > 0 && this.sortedDate[0].data ? this.sortedDate[0].data.deaths : null\n    },\n    totalRecovered: function () {\n      return this.sortedDate.length > 0 && this.sortedDate[0].data ? this.sortedDate[0].data.recovered : null\n    }\n  },\n  methods: {\n    ...mapActions({\n      getCountriesList: 'getCountriesList',\n      getByCountry: 'getByCountry'\n    }),\n    ...mapMutations({\n      SET_LANGUAGE: 'SET_LANGUAGE'\n    }),\n    filterBy: function (option, label, search) {\n      // console.log('val', option.nativeName, label, search)\n      return (option.alpha2Code + option.alpha3Code + option.nativeName + label).toLowerCase().indexOf(search.replace('台', '臺').toLowerCase()) > -1\n    },\n    additionCount: function (index, type) {\n      if (this.sortedDate[index] && this.sortedDate[index + 1]) {\n        return this.sortedDate[index].data[type] - this.sortedDate[index + 1].data[type]\n      }\n    },\n    getData: function (country) {\n      // console.log('getData')\n      this.isLoading = true\n      this.data = []\n      this.getByCountry(country).then(res => {\n        this.errMsg = null\n        this.data = res\n      }).catch((err) => {\n        if (err) {\n          if (err.response.status) {\n            this.errMsg = err.response.status\n          }\n        }\n      }).finally(res => {\n        this.isLoading = false\n      })\n    },\n    getRandomInt () {\n      return Math.floor(Math.random() * (50 - 5 + 1)) + 5\n    },\n    fillData: function () {\n      this.dataCollection = {\n        labels: this.dates,\n        datasets: [\n          {\n            label: '確診',\n            borderColor: '#078abc',\n            data: this.confirmed,\n            pointHoverBackgroundColor: '#078abc',\n            borderJoinStyle: 'round',\n            pointRadius: 2,\n            pointHoverRadius: 4,\n            pointBorderWidth: 0,\n            fill: false\n          },\n          {\n            label: '死亡',\n            borderColor: '#f7ac15',\n            data: this.deaths,\n            pointHoverBackgroundColor: '#f7ac15',\n            borderJoinStyle: 'round',\n            pointRadius: 2,\n            pointHoverRadius: 4,\n            pointBorderWidth: 0,\n            fill: false\n          },\n          {\n            label: '治癒',\n            borderColor: '#8fc112',\n            data: this.recovered,\n            pointHoverBackgroundColor: '#8fc112',\n            borderJoinStyle: 'round',\n            pointRadius: 2,\n            pointHoverRadius: 4,\n            pointBorderWidth: 0,\n            fill: false\n          }\n        ]\n      }\n    }\n  },\n  created () {\n    this.getCountriesList().then(res => {\n      const tw = _.find(res, item => item.alpha3Code === 'TWN')\n      this.selectedCountry = tw\n    })\n    this.getData()\n  },\n  watch: {\n    selectedCountry: {\n      handler: function (val) {\n        // console.log(val)\n        this.getData(val.alpha3Code)\n      },\n      deep: true\n    },\n    sortedDate: {\n      handler: function (val) {\n        this.fillData()\n      },\n      deep: true\n    }\n  }\n}\n</script>\n\n<style lang=\"sass\">\n.vs__dropdown-option.vs__dropdown-option--highlight\n  @apply bg-blue\n  .name, .nativeName\n    @apply text-white\n</style>\n\n<style>\n@keyframes spinner {\n  0% { transform: rotate(0) }\n  100% { transform: rotate(360deg) }\n}\n.spinner div { box-sizing: border-box!important }\n.spinner > div {\n  position: absolute;\n  width: 166px;\n  height: 166px;\n  top: 17px;\n  left: 17px;\n  border-radius: 50%;\n  border: 6px solid #000;\n  border-color: #1d3f72 transparent #1d3f72 transparent;\n  animation: spinner 2.0833333333333335s linear infinite;\n}\n\n.spinner > div:nth-child(2), .spinner > div:nth-child(4) {\n  width: 150px;\n  height: 150px;\n  top: 25px;\n  left: 25px;\n  animation: spinner 2.0833333333333335s linear infinite reverse;\n}\n.spinner > div:nth-child(2) {\n  border-color: transparent #5699d2 transparent #5699d2\n}\n.spinner > div:nth-child(3) { border-color: transparent }\n.spinner > div:nth-child(3) div {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  transform: rotate(45deg);\n}\n.spinner > div:nth-child(3) div:before, .spinner > div:nth-child(3) div:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  top: -6px;\n  left: 74px;\n  background: #1d3f72;\n  border-radius: 50%;\n  box-shadow: 0 160px 0 0 #1d3f72;\n}\n.spinner > div:nth-child(3) div:after {\n  left: -6px;\n  top: 74px;\n  box-shadow: 160px 0 0 0 #1d3f72;\n}\n\n.spinner > div:nth-child(4) { border-color: transparent; }\n.spinner > div:nth-child(4) div {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  transform: rotate(45deg);\n}\n.spinner > div:nth-child(4) div:before, .spinner > div:nth-child(4) div:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  top: -6px;\n  left: 66px;\n  background: #5699d2;\n  border-radius: 50%;\n  box-shadow: 0 144px 0 0 #5699d2;\n}\n.spinner > div:nth-child(4) div:after {\n  left: -6px;\n  top: 66px;\n  box-shadow: 144px 0 0 0 #5699d2;\n}\n.loading-spinner-double-ring {\n  width: 200px;\n  height: 200px;\n  display: inline-block;\n  overflow: hidden;\n  background: transparent;\n  margin: 0\n}\n.spinner {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  transform: translateZ(0) scale(1);\n  backface-visibility: hidden;\n  transform-origin: 0 0; /* see note above */\n}\n.spinner div { box-sizing: content-box; }\n/* generated by https://loading.io/ */\n</style>\n"]}